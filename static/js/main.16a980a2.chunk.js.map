{"version":3,"sources":["styles/Global.js","config/SqlTypes.js","components/Header/styles.js","styles/Metrics.js","store/actions/ThemeAction.js","config/localStorageKeys.js","store/ActionTypes.js","styles/Colors.js","hooks/useThemeSwitcher.js","hooks/useDispatchCallback.js","hooks/useFormatSql.js","core/onFormatDefaultToDelphi.js","core/onFormatDelphiToDefault.js","components/Header/index.js","components/Containers/styles.js","styles/Scrollbars.js","pages/Home/styles.js","pages/Home/index.js","hooks/useCopyToClipboard.js","hooks/useStopTyping.js","hooks/useReadFileContent.js","pages/App/index.js","store/reducers/ThemeReducer.js","store/index.js","config/IconLibrary.js","locales/PT_BR/index.js","locales/index.js","index.js"],"names":["fontStyle","css","theme","primaryText","GlobalStyle","createGlobalStyle","background","Container","styled","div","background2","border","AppName","a","HeaderActions","Action","hoverAlpha01","setTheme","newTheme","localStorage","setItem","JSON","stringify","type","payload","THEME_NAMES","DARK_THEME_COLORS","accent","secondaryText","background3","scrollbar","placeholder","LIGHT_THEME_COLORS","onSetTheme","actionCreator","dispatch","useDispatch","useCallback","useDispatchCallback","name","useSelector","ThemeReducer","isUsingLightMode","colors","setFormattedSql","inputType","outputType","options","inputText","outputText","SQL_TYPES","trim","linesArray","split","length","whiteSpacesForEachLine","Array","join","biggestLine","modifiedLinesArray","map","line","singleQuoteCodeRegexp","RegExp","replace","forEach","index","numberOfWhiteSpaces","lineWhiteSpaces","isTheLastLine","lineIsEmpty","onFormatDefaultToDelphi","semicolonRegexp","endOfLineRegexp","singleQuoteRegexp","plusRegexp","trimRight","onFormatDelphiToDefault","Header","t","useTranslation","onSwitchTheme","useThemeSwitcher","useTheme","href","target","icon","color","onClick","ContainerWithHeader","ScrollStyle01","BREAKPOINTS","Content","ImportActions","FormatContainer","FormatActions","LeftAlignedActions","RightAlignedActions","CenterAlignedActions","round","ImportAction","CopyAction","InputAndOutputContainer","InputContainer","ClearInputAction","InputComponent","textarea","InputFooter","CharactersCount","OutputContainer","OutputText","code","usePlaceholderStyle","Home","elementId","inputRef","useRef","hadInvertedTypes","useState","setInputText","setOutputText","isTyping","setIsTyping","setInputType","setOutputType","onCopyOutputText","element","document","getElementById","window","getSelection","createRange","selection","range","selectNodeContents","removeAllRanges","addRange","body","createTextRange","moveToElementText","select","execCommand","onFormatSql","useFormatSql","onChangeInputText","onSetText","callback","delay","timer","setTimer","onSetTextAndTimer","text","clearTimeout","setTimeout","useStopTyping","onClearInputText","current","focus","onFileSelected","onLoadFile","e","FileReader","file","files","fileReader","onload","readAsText","alert","useReadFileContent","readEvent","result","onInvertTypes","onFormatWhenInvertTypes","useEffect","as","htmlFor","style","display","onChange","accept","id","ref","value","spellCheck","autoCorrect","autoComplete","autoCapitalize","count","App","basename","process","path","component","getItem","initialState","parse","reducers","combineReducers","state","action","createStore","library","add","faGithub","faPalette","faExchangeAlt","faTextWidth","faTimes","faFileUpload","faCopy","Common","Glossary","Error","SqlTypes","i18next","use","initReactI18next","init","resources","PT_BR","fallbackLng","lng","defaultNS","debug","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.16a980a2.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components'\n\nconst fontStyle = css`\n  color: ${({ theme }) => theme.primaryText};\n  line-height: 1.5;\n  font-size: 1.6rem;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    outline: 0;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-family: 'Roboto Mono', monospace;\n    background: ${({ theme }) => theme.background};\n    height: 100%;\n    ${fontStyle}\n  }\n\n  textarea, input, button, code {\n    font-family: 'Roboto Mono', monospace;\n    ${fontStyle}\n  }\n`\n","export default {\n  DEFAULT: 'default',\n  DELPHI: 'delphi',\n}\n","import styled from 'styled-components'\nimport { HEADER_HEIGHT } from '../../styles/Metrics'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 5%;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: ${HEADER_HEIGHT}px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.background2};\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n`\n\nexport const AppName = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.primaryText};\n  text-transform: uppercase;\n  font-size: 2rem;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const HeaderActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  flex: 1;\n`\n\nexport const Action = styled.a`\n  border-radius: 100%;\n  overflow: hidden;\n  font-size: 2rem;\n  width: 4rem;\n  height: 4rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n  margin-left: 1rem;\n  &:hover {\n    background-color: ${({ theme }) => theme.hoverAlpha01};\n  }\n`\n","export const HEADER_HEIGHT = 56\nexport const HEADER_ZINDEX = 1\n","import { SET_THEME } from '../ActionTypes'\nimport { THEME_KEY } from '../../config/localStorageKeys'\n\nexport const setTheme = (newTheme) => {\n  localStorage.setItem(THEME_KEY, JSON.stringify(newTheme))\n\n  return {\n    type: SET_THEME,\n    payload: newTheme,\n  }\n}\n","export const THEME_KEY = 'THEME_KEY'\n","export const SET_THEME = 'SET_THEME'\n","export const THEME_NAMES = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n}\n\nexport const DARK_THEME_COLORS = {\n  accent: '#f4a022',\n  primaryText: '#ffffff',\n  secondaryText: '#ccc',\n  background: '#333333',\n  background2: '#262626',\n  background3: '#222222',\n  border: '#444444',\n  scrollbar: '#555555',\n  placeholder: 'rgba(255, 255, 255, 0.6)',\n  hoverAlpha01: 'rgba(255, 255, 255, 0.1)',\n}\n\nexport const LIGHT_THEME_COLORS = {\n  accent: '#f4a022',\n  primaryText: '#313131',\n  secondaryText: '#616161',\n  background: '#ffffff',\n  background2: '#f2f2f2',\n  background3: '#eeeeee',\n  border: '#e2e2e2',\n  scrollbar: '#aaaaaa',\n  placeholder: 'rgba(0, 0, 0, 0.6)',\n  hoverAlpha01: 'rgba(0, 0, 0, 0.1)',\n}\n","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { setTheme } from '../store/actions'\nimport useDispatchCallback from './useDispatchCallback'\nimport {\n  THEME_NAMES,\n  DARK_THEME_COLORS,\n  LIGHT_THEME_COLORS,\n} from '../styles/Colors'\n\nexport default () => {\n  const onSetTheme = useDispatchCallback(setTheme)\n  const { name } = useSelector(({ ThemeReducer }) => ThemeReducer)\n\n  const onSwtchTheme = useCallback(() => {\n    const isUsingLightMode = name === THEME_NAMES.LIGHT\n    onSetTheme({\n      name: isUsingLightMode ? THEME_NAMES.DARK : THEME_NAMES.LIGHT,\n      colors: isUsingLightMode ? DARK_THEME_COLORS : LIGHT_THEME_COLORS,\n    })\n  }, [name, onSetTheme])\n\n  return onSwtchTheme\n}\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default (actionCreator) => {\n  const dispatch = useDispatch()\n\n  return useCallback((payload) => dispatch(actionCreator(payload)), [\n    dispatch,\n    actionCreator,\n  ])\n}\n","import { useCallback } from 'react'\nimport SQL_TYPES from '../config/SqlTypes'\nimport { onFormatDefaultToDelphi, onFormatDelphiToDefault } from '../core'\n\nexport default (setFormattedSql, inputType, outputType, options) => {\n  const onFormatSql = useCallback(\n    (inputText) => {\n      let outputText = ''\n\n      switch (true) {\n        case inputType === SQL_TYPES.DEFAULT &&\n          outputType === SQL_TYPES.DELPHI: {\n          outputText = onFormatDefaultToDelphi(inputText, options)\n          break\n        }\n        case inputType === SQL_TYPES.DELPHI &&\n          outputType === SQL_TYPES.DEFAULT: {\n          outputText = onFormatDelphiToDefault(inputText, options)\n          break\n        }\n        default:\n          outputText = ''\n      }\n\n      setFormattedSql(outputText)\n    },\n    [inputType, options, outputType, setFormattedSql],\n  )\n\n  return onFormatSql\n}\n","export default (inputText) => {\n  if (!inputText || !inputText.trim()) return ''\n  const linesArray = inputText.split('\\n')\n  let outputText = ''\n\n  if (linesArray.length > 1) {\n    const whiteSpacesForEachLine = Array(linesArray.length).join('.').split('.')\n    let biggestLine = ''\n\n    // Modify each line of the inputText\n    const modifiedLinesArray = linesArray.map((line) => {\n      // Replace ' by '#39'\n      const singleQuoteCodeRegexp = new RegExp(`'`, 'gi')\n      const modifiedLine = line.replace(singleQuoteCodeRegexp, `'#39'`)\n      return modifiedLine\n    })\n\n    // Finds the biggest line\n    modifiedLinesArray.forEach((line) => {\n      if (line.length > biggestLine.length) {\n        biggestLine = line\n      }\n    })\n\n    // Calculates the number of white spaces to put in the end of each line\n    modifiedLinesArray.forEach((line, index) => {\n      const lineLengthDifference = biggestLine.length - line.length\n      const numberOfWhiteSpaces = lineLengthDifference + 4\n      whiteSpacesForEachLine[index] = Array(numberOfWhiteSpaces).join(' ')\n    })\n\n    outputText = modifiedLinesArray\n      .map((line, index) => {\n        const lineWhiteSpaces = whiteSpacesForEachLine[index]\n        const isTheLastLine = index === modifiedLinesArray.length - 1\n        const lineIsEmpty = !line || !line.trim()\n\n        if (isTheLastLine) return `'${line}${lineWhiteSpaces}';`\n        if (lineIsEmpty) return `'${lineWhiteSpaces}'#13+`\n        return `'${line}${lineWhiteSpaces}'#13+`\n      })\n      .join('\\n')\n  } else {\n    return `'${inputText}';`\n  }\n\n  return outputText\n}\n","export default (inputText) => {\n  if (!inputText || !inputText.trim()) return ''\n  let outputText = inputText\n\n  const semicolonRegexp = new RegExp(';', 'gi')\n  const endOfLineRegexp = new RegExp('#13', 'gi')\n  const singleQuoteRegexp = new RegExp(`'`, 'gi')\n  const singleQuoteCodeRegexp = new RegExp('#39', 'gi')\n  const plusRegexp = new RegExp('\\\\+', 'gi')\n\n  outputText = outputText.replace(semicolonRegexp, '')\n  outputText = outputText.replace(endOfLineRegexp, '')\n  outputText = outputText.replace(singleQuoteRegexp, '')\n  outputText = outputText.replace(singleQuoteCodeRegexp, `'`)\n  outputText = outputText.replace(plusRegexp, '')\n\n  outputText = outputText\n    .split('\\n')\n    .map((line) => line.trimRight())\n    .join('\\n')\n\n  return outputText\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useTheme } from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { Container, AppName, HeaderActions, Action } from './styles'\nimport { useThemeSwitcher } from '../../hooks'\n\nconst repoUrl = 'https://github.com/LuanEdCosta/carrijeta-sql-formatter'\n\nconst Header = () => {\n  const { t } = useTranslation()\n  const onSwitchTheme = useThemeSwitcher()\n  const theme = useTheme()\n\n  return (\n    <Container>\n      <AppName href=\"/\">{t('appName')}</AppName>\n\n      <HeaderActions>\n        <Action href={repoUrl} target=\"_blank\">\n          <FontAwesomeIcon icon={['fab', 'github']} color={theme.primaryText} />\n        </Action>\n\n        <Action onClick={onSwitchTheme}>\n          <FontAwesomeIcon icon=\"palette\" color={theme.primaryText} />\n        </Action>\n      </HeaderActions>\n    </Container>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport { HEADER_HEIGHT } from '../../styles/Metrics'\n\nexport const ContainerWithHeader = styled.div`\n  margin-top: ${HEADER_HEIGHT}px;\n`\n","import { css } from 'styled-components'\n\nexport const ScrollStyle01 = css`\n  &:hover {\n    ::-webkit-scrollbar {\n      display: block;\n    }\n  }\n\n  ::-webkit-scrollbar {\n    background: ${({ theme }) => theme.background2};\n    width: 12px;\n    height: 12px;\n    display: none;\n  }\n\n  ::-webkit-scrollbar-button {\n    display: none;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollbar};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${({ theme }) => theme.background3};\n  }\n\n  ::-webkit-scrollbar-corner {\n    display: none;\n  }\n\n  ::-webkit-resizer {\n    display: none;\n  }\n`\n","import styled from 'styled-components'\nimport { ContainerWithHeader } from '../../components/Containers'\nimport { ScrollStyle01 } from '../../styles/Scrollbars'\n\nconst BREAKPOINTS = {\n  FIRST: '850px',\n  SECOND: '660px',\n}\n\nexport const Container = styled(ContainerWithHeader)`\n  height: 100%;\n`\n\nexport const Content = styled.div`\n  padding: 24px 5%;\n`\n\nexport const ImportActions = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n`\n\nexport const FormatContainer = styled.div`\n  border: 1px solid ${({ theme }) => theme.border};\n  background: ${({ theme }) => theme.background2};\n  border-radius: 8px;\n  min-height: 450px;\n  height: 70vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const FormatActions = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 8px;\n  display: flex;\n  justify-content: center;\n  @media only screen and (max-width: ${BREAKPOINTS.FIRST}) {\n    align-items: center;\n    flex-direction: column;\n  }\n`\n\nexport const LeftAlignedActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  flex: 1;\n`\n\nexport const RightAlignedActions = styled.div`\n  display: flex;\n  flex: 1;\n  @media only screen and (max-width: ${BREAKPOINTS.FIRST}) {\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n  }\n`\n\nexport const CenterAlignedActions = styled.div`\n  margin: 0 16px;\n`\n\nexport const Action = styled.div`\n  border-radius: ${({ round }) => (round ? '100%' : '5px')};\n  padding: ${({ round }) => (round ? '0' : '8px 16px')};\n  width: ${({ round }) => (round ? '4rem' : 'auto')};\n  height: ${({ round }) => (round ? '4rem' : 'auto')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: nowrap;\n  transition: background 0.2s ease-in-out;\n  cursor: pointer;\n  user-select: none;\n  font-weight: bold;\n  text-transform: uppercase;\n  span {\n    margin-left: 1.6rem;\n  }\n  &:hover {\n    background: ${({ theme }) => theme.hoverAlpha01};\n  }\n`\n\nexport const ImportAction = styled(Action)`\n  border: 1px solid ${({ theme }) => theme.border};\n`\n\nexport const CopyAction = styled(Action)`\n  margin-left: auto;\n`\n\nexport const InputAndOutputContainer = styled.div`\n  display: flex;\n  flex: 1;\n  max-height: 100%;\n  overflow: hidden;\n  @media only screen and (max-width: ${BREAKPOINTS.FIRST}) {\n    flex-direction: column;\n  }\n`\n\nexport const InputContainer = styled.div`\n  border-right: 1px solid ${({ theme }) => theme.border};\n  background: ${({ theme }) => theme.background3};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nexport const ClearInputAction = styled(Action)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin-top: 0.4rem;\n  margin-right: 0.4rem;\n`\n\nexport const InputComponent = styled.textarea`\n  background: ${({ theme }) => theme.background3};\n  padding: 2.4rem;\n  font-size: 1.8rem;\n  text-transform: uppercase;\n  overflow: auto;\n  white-space: pre;\n  resize: none;\n  border: none;\n  flex: 1;\n  min-height: 160px;\n  max-height: 100%;\n  max-width: 100%;\n  ${ScrollStyle01}\n`\n\nexport const InputFooter = styled.div`\n  display: flex;\n  padding: 8px 24px;\n`\n\nexport const CharactersCount = styled.div`\n  color: ${({ theme }) => theme.secondaryText};\n  margin-left: auto;\n  display: inline;\n  span {\n    margin-left: 0.8rem;\n  }\n`\n\nexport const OutputContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  overflow: hidden;\n`\nexport const OutputText = styled.code`\n  background: ${({ theme }) => theme.background3};\n  color: ${({ theme, usePlaceholderStyle }) =>\n    usePlaceholderStyle ? theme.placeholder : theme.primaryText};\n  text-transform: uppercase;\n  font-size: 1.8rem;\n  padding: 2.4rem;\n  overflow: auto;\n  white-space: pre;\n  flex: 1;\n  min-height: 160px;\n  max-height: 100%;\n  max-width: 100%;\n  ${ScrollStyle01}\n`\n","import React, { useState, useCallback, useRef, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useTranslation } from 'react-i18next'\nimport SQL_TYPES from '../../config/SqlTypes'\nimport Header from '../../components/Header'\nimport {\n  useStopTyping,\n  useFormatSql,\n  useCopyToClipboard,\n  useReadFileContent,\n} from '../../hooks'\nimport {\n  Container,\n  Content,\n  FormatContainer,\n  FormatActions,\n  InputAndOutputContainer,\n  InputContainer,\n  OutputContainer,\n  Action,\n  LeftAlignedActions,\n  RightAlignedActions,\n  CenterAlignedActions,\n  InputComponent,\n  InputFooter,\n  CharactersCount,\n  ClearInputAction,\n  OutputText,\n  ImportActions,\n  ImportAction,\n  CopyAction,\n} from './styles'\n\nconst Home = () => {\n  const { t } = useTranslation(['Home', 'SqlTypes'])\n\n  const inputRef = useRef(null)\n  const hadInvertedTypes = useRef(false)\n  const [inputText, setInputText] = useState('')\n  const [outputText, setOutputText] = useState('')\n  const [isTyping, setIsTyping] = useState(false)\n  const [inputType, setInputType] = useState(SQL_TYPES.DEFAULT)\n  const [outputType, setOutputType] = useState(SQL_TYPES.DELPHI)\n\n  const onCopyOutputText = useCopyToClipboard('outputText')\n  const onFormatSql = useFormatSql(setOutputText, inputType, outputType)\n\n  const onChangeInputText = useStopTyping(\n    setInputText,\n    onFormatSql,\n    setIsTyping,\n  )\n\n  const onClearInputText = useCallback(() => {\n    setInputText('')\n    setOutputText('')\n    setIsTyping(false)\n    inputRef.current.focus()\n  }, [])\n\n  const onFileSelected = useReadFileContent((readEvent) => {\n    onChangeInputText(readEvent.target.result)\n  })\n\n  const onInvertTypes = useCallback(() => {\n    setInputType(outputType)\n    setOutputType(inputType)\n    setInputText(outputText)\n    setOutputText(inputText)\n    hadInvertedTypes.current = true\n  }, [inputText, inputType, outputText, outputType])\n\n  const onFormatWhenInvertTypes = useCallback(() => {\n    if (hadInvertedTypes.current) {\n      onChangeInputText(inputText)\n      hadInvertedTypes.current = false\n    }\n  }, [inputText, onChangeInputText])\n\n  useEffect(onFormatWhenInvertTypes, [inputType, outputType])\n\n  return (\n    <Container>\n      <Header />\n\n      <Content>\n        <ImportActions>\n          <ImportAction as=\"label\" htmlFor=\"fileInput\">\n            <FontAwesomeIcon icon=\"file-upload\" />\n            <span>{t('importSqlFile')}</span>\n            <input\n              style={{ display: 'none' }}\n              onChange={onFileSelected}\n              accept=\".sql\"\n              id=\"fileInput\"\n              type=\"file\"\n            />\n          </ImportAction>\n        </ImportActions>\n\n        <FormatContainer>\n          <FormatActions>\n            <LeftAlignedActions>\n              <Action>{t(`SqlTypes:${inputType}`)}</Action>\n            </LeftAlignedActions>\n\n            <CenterAlignedActions>\n              <Action onClick={onInvertTypes} round>\n                <FontAwesomeIcon icon=\"exchange-alt\" />\n              </Action>\n            </CenterAlignedActions>\n\n            <RightAlignedActions>\n              <Action>{t(`SqlTypes:${outputType}`)}</Action>\n\n              <CopyAction onClick={onCopyOutputText}>\n                <FontAwesomeIcon icon=\"copy\" />\n                <span>{t('Glossary:copy')}</span>\n              </CopyAction>\n            </RightAlignedActions>\n          </FormatActions>\n\n          <InputAndOutputContainer>\n            <InputContainer>\n              {!!inputText && (\n                <ClearInputAction onClick={onClearInputText} round>\n                  <FontAwesomeIcon icon=\"times\" />\n                </ClearInputAction>\n              )}\n\n              <InputComponent\n                ref={inputRef}\n                value={inputText}\n                onChange={(e) => onChangeInputText(e.target.value)}\n                placeholder={t('sqlPlaceholder')}\n                spellCheck=\"false\"\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n              />\n\n              <InputFooter>\n                <CharactersCount>\n                  <FontAwesomeIcon icon=\"text-width\" />\n                  <span>{t('charCount', { count: inputText.length })}</span>\n                </CharactersCount>\n              </InputFooter>\n            </InputContainer>\n\n            <OutputContainer>\n              <OutputText usePlaceholderStyle={isTyping} id=\"outputText\">\n                {isTyping ? t('formatting') : outputText}\n              </OutputText>\n            </OutputContainer>\n          </InputAndOutputContainer>\n        </FormatContainer>\n      </Content>\n    </Container>\n  )\n}\n\nexport default Home\n","import { useCallback } from 'react'\n\nexport default (elementId) => {\n  const onCopyToClipboard = useCallback(() => {\n    const element = document.getElementById(elementId)\n\n    if (window.getSelection && document.createRange) {\n      const selection = window.getSelection()\n      const range = document.createRange()\n      range.selectNodeContents(element)\n      selection.removeAllRanges()\n      selection.addRange(range)\n    } else if (document.body.createTextRange) {\n      const range = document.body.createTextRange()\n      range.moveToElementText(element)\n      range.select()\n    }\n\n    document.execCommand('copy')\n  }, [elementId])\n\n  return onCopyToClipboard\n}\n","import { useState, useCallback } from 'react'\n\nexport default (onSetText, callback, setIsTyping, delay = 600) => {\n  const [timer, setTimer] = useState(0)\n\n  const onSetTextAndTimer = useCallback(\n    (text) => {\n      clearTimeout(timer)\n\n      if (onSetText) onSetText(text)\n      if (setIsTyping) setIsTyping(true)\n\n      setTimer(\n        setTimeout(() => {\n          if (callback) callback(text)\n          if (setIsTyping) setIsTyping(false)\n        }, delay),\n      )\n    },\n    [callback, delay, onSetText, setIsTyping, timer],\n  )\n\n  return onSetTextAndTimer\n}\n","/* eslint-disable no-alert */\n\nimport { useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default (onLoadFile) => {\n  const { t } = useTranslation('Error')\n\n  const onReadFileContent = useCallback(\n    (e) => {\n      if (typeof window.FileReader === 'function') {\n        const [file] = e.target.files\n        const fileReader = new FileReader()\n        fileReader.onload = onLoadFile\n        fileReader.readAsText(file)\n      } else {\n        alert(t('readFile'))\n      }\n    },\n    [onLoadFile, t],\n  )\n\n  return onReadFileContent\n}\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { GlobalStyle } from '../../styles/Global'\nimport Home from '../Home'\n\nconst App = () => {\n  const { colors } = useSelector(({ ThemeReducer }) => ThemeReducer)\n\n  return (\n    <ThemeProvider theme={colors}>\n      <GlobalStyle />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { SET_THEME } from '../ActionTypes'\nimport { DARK_THEME_COLORS, THEME_NAMES } from '../../styles/Colors'\nimport { THEME_KEY } from '../../config/localStorageKeys'\n\nconst theme = localStorage.getItem(THEME_KEY)\n\nconst initialState = theme\n  ? JSON.parse(theme)\n  : {\n      name: THEME_NAMES.DARK,\n      colors: DARK_THEME_COLORS,\n    }\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case SET_THEME:\n      return { ...state, ...payload }\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers } from 'redux'\nimport ThemeReducer from './reducers/ThemeReducer'\n\nconst reducers = combineReducers({ ThemeReducer })\n\nexport default createStore(reducers)\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport {\n  faPalette,\n  faExchangeAlt,\n  faTextWidth,\n  faTimes,\n  faFileUpload,\n  faCopy,\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n  faGithub,\n  faPalette,\n  faExchangeAlt,\n  faTextWidth,\n  faTimes,\n  faFileUpload,\n  faCopy,\n)\n","import Glossary from './Glossary.json'\nimport Home from './Home.json'\nimport Common from './Common.json'\nimport Error from './Error.json'\nimport SqlTypes from './SqlTypes.json'\n\nexport default {\n  Common,\n  Glossary,\n  Home,\n  Error,\n  SqlTypes,\n}\n","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport PT_BR from './PT_BR'\n\ni18next.use(initReactI18next).init({\n  resources: { 'pt-BR': PT_BR },\n  fallbackLng: 'pt-BR',\n  lng: 'pt-BR',\n  defaultNS: 'Common',\n  debug: false,\n})\n\nexport default i18next\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './pages/App'\nimport store from './store'\nimport './config/IconLibrary'\nimport './locales'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}