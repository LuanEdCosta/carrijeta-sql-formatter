{"version":3,"sources":["styles/Global.js","components/Header/styles.js","styles/Metrics.js","store/actions/ThemeAction.js","config/localStorageKeys.js","store/ActionTypes.js","styles/Colors.js","hooks/useThemeSwitcher.js","hooks/useDispatchCallback.js","components/Header/index.js","components/Containers/styles.js","pages/Home/styles.js","pages/Home/index.js","hooks/useFormatSql.js","hooks/useCopyToClipboard.js","hooks/useStopTyping.js","pages/App/index.js","store/reducers/ThemeReducer.js","store/index.js","config/IconLibrary.js","locales/PT_BR/index.js","locales/index.js","index.js"],"names":["fontStyle","css","theme","primaryText","GlobalStyle","createGlobalStyle","background","Container","styled","div","background2","border","AppName","a","HeaderActions","Action","hoverAlpha01","setTheme","newTheme","localStorage","setItem","JSON","stringify","type","payload","THEME_NAMES","DARK_THEME_COLORS","accent","secondaryText","background3","placeholder","LIGHT_THEME_COLORS","onSetTheme","actionCreator","dispatch","useDispatch","useCallback","useDispatchCallback","name","useSelector","ThemeReducer","isUsingLightMode","colors","Header","t","useTranslation","onSwitchTheme","useThemeSwitcher","useTheme","href","target","icon","color","onClick","ContainerWithHeader","BREAKPOINTS","Content","ImportActions","FormatContainer","FormatActions","LeftAlignedActions","RightAlignedActions","CenterAlignedActions","round","ImportAction","CopyAction","InputAndOutputContainer","InputContainer","ClearInputAction","InputComponent","textarea","InputFooter","CharactersCount","OutputContainer","OutputText","code","usePlaceholderStyle","Home","setFormattedSql","elementId","inputRef","useRef","useState","inputText","setInputText","outputText","setOutputText","isTyping","setIsTyping","onFormatSql","sqlText","trim","formattedSql","linesArray","split","length","biggestLine","whiteSpacesForEachLine","Array","join","forEach","line","index","numberOfWhiteSpaces","lineWhiteSpaces","newLine","onChangeInputText","onSetText","callback","delay","timer","setTimer","onSetTextAndTimer","text","clearTimeout","setTimeout","useStopTyping","onClearInputText","current","focus","onFileSelected","e","window","FileReader","file","files","fileReader","onload","readEvent","result","readAsText","alert","onCopyOutputText","element","document","getElementById","getSelection","createRange","selection","range","selectNodeContents","removeAllRanges","addRange","body","createTextRange","moveToElementText","select","execCommand","as","htmlFor","style","display","onChange","accept","id","ref","value","spellCheck","autoCorrect","autoComplete","autoCapitalize","count","App","basename","process","path","component","getItem","initialState","parse","reducers","combineReducers","state","action","createStore","library","add","faGithub","faPalette","faExchangeAlt","faTextWidth","faTimes","faFileUpload","faCopy","Common","Glossary","Error","i18next","use","initReactI18next","init","resources","PT_BR","fallbackLng","lng","defaultNS","debug","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.b72849eb.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components'\n\nconst fontStyle = css`\n  color: ${({ theme }) => theme.primaryText};\n  line-height: 1.5;\n  font-size: 1.6rem;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    outline: 0;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-family: 'Roboto Mono', monospace;\n    background: ${({ theme }) => theme.background};\n    height: 100%;\n    ${fontStyle}\n  }\n\n  textarea, input, button, code {\n    font-family: 'Roboto Mono', monospace;\n    ${fontStyle}\n  }\n`\n","import styled from 'styled-components'\nimport { HEADER_HEIGHT } from '../../styles/Metrics'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 5%;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: ${HEADER_HEIGHT}px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.background2};\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n`\n\nexport const AppName = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.primaryText};\n  text-transform: uppercase;\n  font-size: 2rem;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const HeaderActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  flex: 1;\n`\n\nexport const Action = styled.a`\n  border-radius: 100%;\n  overflow: hidden;\n  font-size: 2rem;\n  width: 4rem;\n  height: 4rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n  margin-left: 1rem;\n  &:hover {\n    background-color: ${({ theme }) => theme.hoverAlpha01};\n  }\n`\n","export const HEADER_HEIGHT = 56\nexport const HEADER_ZINDEX = 1\n","import { SET_THEME } from '../ActionTypes'\nimport { THEME_KEY } from '../../config/localStorageKeys'\n\nexport const setTheme = (newTheme) => {\n  localStorage.setItem(THEME_KEY, JSON.stringify(newTheme))\n\n  return {\n    type: SET_THEME,\n    payload: newTheme,\n  }\n}\n","export const THEME_KEY = 'THEME_KEY'\n","export const SET_THEME = 'SET_THEME'\n","export const THEME_NAMES = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n}\n\nexport const DARK_THEME_COLORS = {\n  accent: '#f4a022',\n  primaryText: '#ffffff',\n  secondaryText: '#ccc',\n  background: '#333333',\n  background2: '#262626',\n  background3: '#222222',\n  border: '#444444',\n  placeholder: 'rgba(255, 255, 255, 0.6)',\n  hoverAlpha01: 'rgba(255, 255, 255, 0.1)',\n}\n\nexport const LIGHT_THEME_COLORS = {\n  accent: '#f4a022',\n  primaryText: '#313131',\n  secondaryText: '#616161',\n  background: '#ffffff',\n  background2: '#f2f2f2',\n  background3: '#eeeeee',\n  border: '#e2e2e2',\n  placeholder: 'rgba(0, 0, 0, 0.6)',\n  hoverAlpha01: 'rgba(0, 0, 0, 0.1)',\n}\n","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { setTheme } from '../store/actions'\nimport useDispatchCallback from './useDispatchCallback'\nimport {\n  THEME_NAMES,\n  DARK_THEME_COLORS,\n  LIGHT_THEME_COLORS,\n} from '../styles/Colors'\n\nexport default () => {\n  const onSetTheme = useDispatchCallback(setTheme)\n  const { name } = useSelector(({ ThemeReducer }) => ThemeReducer)\n\n  const onSwtchTheme = useCallback(() => {\n    const isUsingLightMode = name === THEME_NAMES.LIGHT\n    onSetTheme({\n      name: isUsingLightMode ? THEME_NAMES.DARK : THEME_NAMES.LIGHT,\n      colors: isUsingLightMode ? DARK_THEME_COLORS : LIGHT_THEME_COLORS,\n    })\n  }, [name, onSetTheme])\n\n  return onSwtchTheme\n}\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default (actionCreator) => {\n  const dispatch = useDispatch()\n\n  return useCallback((payload) => dispatch(actionCreator(payload)), [\n    dispatch,\n    actionCreator,\n  ])\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useTheme } from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { Container, AppName, HeaderActions, Action } from './styles'\nimport { useThemeSwitcher } from '../../hooks'\n\nconst repoUrl = 'https://github.com/LuanEdCosta/carrijeta-sql-formatter'\n\nconst Header = () => {\n  const { t } = useTranslation()\n  const onSwitchTheme = useThemeSwitcher()\n  const theme = useTheme()\n\n  return (\n    <Container>\n      <AppName href=\"/\">{t('appName')}</AppName>\n\n      <HeaderActions>\n        <Action href={repoUrl} target=\"_blank\">\n          <FontAwesomeIcon icon={['fab', 'github']} color={theme.primaryText} />\n        </Action>\n\n        <Action onClick={onSwitchTheme}>\n          <FontAwesomeIcon icon=\"palette\" color={theme.primaryText} />\n        </Action>\n      </HeaderActions>\n    </Container>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport { HEADER_HEIGHT } from '../../styles/Metrics'\n\nexport const ContainerWithHeader = styled.div`\n  margin-top: ${HEADER_HEIGHT}px;\n`\n","import styled from 'styled-components'\nimport { ContainerWithHeader } from '../../components/Containers'\n\nconst BREAKPOINTS = {\n  FIRST: '850px',\n  SECOND: '660px',\n}\n\nexport const Container = styled(ContainerWithHeader)`\n  height: 100%;\n`\n\nexport const Content = styled.div`\n  padding: 24px 5%;\n`\n\nexport const ImportActions = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n`\n\nexport const FormatContainer = styled.div`\n  border: 1px solid ${({ theme }) => theme.border};\n  border-radius: 8px;\n  background: ${({ theme }) => theme.background2};\n  min-height: 400px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const FormatActions = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 8px;\n  display: flex;\n  justify-content: center;\n  @media only screen and (max-width: ${BREAKPOINTS.FIRST}) {\n    align-items: center;\n    flex-direction: column;\n  }\n`\n\nexport const LeftAlignedActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  flex: 1;\n`\n\nexport const RightAlignedActions = styled.div`\n  display: flex;\n  flex: 1;\n  @media only screen and (max-width: ${BREAKPOINTS.FIRST}) {\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n  }\n`\n\nexport const CenterAlignedActions = styled.div`\n  margin: 0 16px;\n`\n\nexport const Action = styled.div`\n  border-radius: ${({ round }) => (round ? '100%' : '5px')};\n  padding: ${({ round }) => (round ? '0' : '8px 16px')};\n  width: ${({ round }) => (round ? '4rem' : 'auto')};\n  height: ${({ round }) => (round ? '4rem' : 'auto')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: nowrap;\n  transition: background 0.2s ease-in-out;\n  cursor: pointer;\n  user-select: none;\n  font-weight: bold;\n  text-transform: uppercase;\n  span {\n    margin-left: 1.6rem;\n  }\n  &:hover {\n    background: ${({ theme }) => theme.hoverAlpha01};\n  }\n`\n\nexport const ImportAction = styled(Action)`\n  border: 1px solid ${({ theme }) => theme.border};\n`\n\nexport const CopyAction = styled(Action)`\n  margin-left: auto;\n`\n\nexport const InputAndOutputContainer = styled.div`\n  display: flex;\n  flex: 1;\n  @media only screen and (max-width: ${BREAKPOINTS.FIRST}) {\n    flex-direction: column;\n  }\n`\n\nexport const InputContainer = styled.div`\n  border-right: 1px solid ${({ theme }) => theme.border};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nexport const ClearInputAction = styled(Action)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin-top: 0.8rem;\n  margin-right: 0.8rem;\n`\n\nexport const InputComponent = styled.textarea`\n  background: ${({ theme }) => theme.background3};\n  padding: 2.4rem 5.6rem 2.4rem 2.4rem;\n  font-size: 1.8rem;\n  text-transform: uppercase;\n  overflow: hidden auto;\n  resize: none;\n  border: none;\n  flex: 1;\n  min-height: 160px;\n`\n\nexport const InputFooter = styled.div`\n  display: flex;\n  padding: 8px 24px;\n`\n\nexport const CharactersCount = styled.div`\n  margin-left: auto;\n  display: inline;\n  color: ${({ theme }) => theme.secondaryText};\n  span {\n    margin-left: 0.8rem;\n  }\n`\n\nexport const OutputContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\nexport const OutputText = styled.code`\n  background: ${({ theme }) => theme.background3};\n  color: ${({ theme, usePlaceholderStyle }) =>\n    usePlaceholderStyle ? theme.placeholder : theme.primaryText};\n  text-transform: uppercase;\n  font-size: 1.8rem;\n  padding: 2.4rem;\n  overflow: hidden;\n  word-break: break-all;\n  white-space: pre-wrap;\n  flex: 1;\n  min-height: 160px;\n`\n","import React, { useState, useCallback, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useTranslation } from 'react-i18next'\nimport Header from '../../components/Header'\nimport {\n  Container,\n  Content,\n  FormatContainer,\n  FormatActions,\n  InputAndOutputContainer,\n  InputContainer,\n  OutputContainer,\n  Action,\n  LeftAlignedActions,\n  RightAlignedActions,\n  CenterAlignedActions,\n  InputComponent,\n  InputFooter,\n  CharactersCount,\n  ClearInputAction,\n  OutputText,\n  ImportActions,\n  ImportAction,\n  CopyAction,\n} from './styles'\nimport { useStopTyping, useFormatSql, useCopyToClipboard } from '../../hooks'\n\nconst Home = () => {\n  const { t } = useTranslation('Home')\n\n  const inputRef = useRef(null)\n  const [inputText, setInputText] = useState('')\n  const [outputText, setOutputText] = useState('')\n  const [isTyping, setIsTyping] = useState('')\n\n  const onFormatSql = useFormatSql(setOutputText)\n\n  const onChangeInputText = useStopTyping(\n    setInputText,\n    onFormatSql,\n    setIsTyping,\n  )\n\n  const onClearInputText = useCallback(() => {\n    setInputText('')\n    setOutputText('')\n    setIsTyping(false)\n    inputRef.current.focus()\n  }, [])\n\n  const onFileSelected = useCallback(\n    (e) => {\n      if (typeof window.FileReader === 'function') {\n        const [file] = e.target.files\n        const fileReader = new FileReader()\n        fileReader.onload = (readEvent) => {\n          onChangeInputText(readEvent.target.result)\n        }\n        fileReader.readAsText(file)\n      } else {\n        // eslint-disable-next-line no-alert\n        alert(t('Error:readFile'))\n      }\n    },\n    [onChangeInputText, t],\n  )\n\n  const onCopyOutputText = useCopyToClipboard('outputText')\n\n  return (\n    <Container>\n      <Header />\n\n      <Content>\n        <ImportActions>\n          <ImportAction as=\"label\" htmlFor=\"fileInput\">\n            <FontAwesomeIcon icon=\"file-upload\" />\n            <span>{t('importSqlFile')}</span>\n            <input\n              style={{ display: 'none' }}\n              onChange={onFileSelected}\n              accept=\".sql\"\n              id=\"fileInput\"\n              type=\"file\"\n            />\n          </ImportAction>\n        </ImportActions>\n\n        <FormatContainer>\n          <FormatActions>\n            <LeftAlignedActions>\n              <Action>{t('sqlTypes.normal')}</Action>\n            </LeftAlignedActions>\n\n            <CenterAlignedActions>\n              <Action round>\n                <FontAwesomeIcon icon=\"exchange-alt\" />\n              </Action>\n            </CenterAlignedActions>\n\n            <RightAlignedActions>\n              <Action>{t('sqlTypes.delphi')}</Action>\n\n              <CopyAction onClick={onCopyOutputText}>\n                <FontAwesomeIcon icon=\"copy\" />\n                <span>{t('Glossary:copy')}</span>\n              </CopyAction>\n            </RightAlignedActions>\n          </FormatActions>\n\n          <InputAndOutputContainer>\n            <InputContainer>\n              {!!inputText && (\n                <ClearInputAction onClick={onClearInputText} round>\n                  <FontAwesomeIcon icon=\"times\" />\n                </ClearInputAction>\n              )}\n\n              <InputComponent\n                ref={inputRef}\n                value={inputText}\n                onChange={(e) => onChangeInputText(e.target.value)}\n                placeholder={t('sqlPlaceholder')}\n                spellCheck=\"false\"\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n              />\n\n              <InputFooter>\n                <CharactersCount>\n                  <FontAwesomeIcon icon=\"text-width\" />\n                  <span>{t('charCount', { count: inputText.length })}</span>\n                </CharactersCount>\n              </InputFooter>\n            </InputContainer>\n\n            <OutputContainer>\n              <OutputText usePlaceholderStyle={isTyping} id=\"outputText\">\n                {isTyping && !!inputText ? t('formatting') : outputText}\n              </OutputText>\n            </OutputContainer>\n          </InputAndOutputContainer>\n        </FormatContainer>\n      </Content>\n    </Container>\n  )\n}\n\nexport default Home\n","import { useCallback } from 'react'\n\nconst END_OF_SQL = `';`\nconst END_OF_LINE = `'#13+`\n\nexport default (setFormattedSql) => {\n  const onFormatSql = useCallback(\n    (sqlText) => {\n      if (!sqlText || !sqlText.trim()) {\n        setFormattedSql('')\n        return\n      }\n\n      let formattedSql = ''\n      const linesArray = sqlText.split('\\n')\n\n      if (linesArray.length > 1) {\n        let biggestLine = ''\n        const whiteSpacesForEachLine = Array(linesArray.length)\n          .join('.')\n          .split('.')\n\n        linesArray.forEach((line) => {\n          if (line.length > biggestLine.length) {\n            biggestLine = line\n          }\n        })\n\n        linesArray.forEach((line, index) => {\n          const lineLengthDifference = biggestLine.length - line.length\n          const numberOfWhiteSpaces = lineLengthDifference + 4\n          whiteSpacesForEachLine[index] = Array(numberOfWhiteSpaces).join(' ')\n        })\n\n        linesArray.forEach((line, index) => {\n          const lineWhiteSpaces = whiteSpacesForEachLine[index]\n          const newLine = `'${line}${lineWhiteSpaces}${END_OF_LINE}\\n`\n\n          if (index !== linesArray.length - 1) {\n            if (!line || !line.trim()) {\n              formattedSql += `'${lineWhiteSpaces}${END_OF_LINE}\\n`\n            } else {\n              formattedSql += newLine\n            }\n          } else {\n            formattedSql += `'${line}${lineWhiteSpaces}${END_OF_SQL}`\n          }\n        })\n      } else {\n        formattedSql = `'${sqlText}${END_OF_SQL}`\n      }\n\n      setFormattedSql(formattedSql)\n    },\n    [setFormattedSql],\n  )\n\n  return onFormatSql\n}\n","import { useCallback } from 'react'\n\nexport default (elementId) => {\n  const onCopyToClipboard = useCallback(() => {\n    const element = document.getElementById(elementId)\n\n    if (window.getSelection && document.createRange) {\n      const selection = window.getSelection()\n      const range = document.createRange()\n      range.selectNodeContents(element)\n      selection.removeAllRanges()\n      selection.addRange(range)\n    } else if (document.body.createTextRange) {\n      const range = document.body.createTextRange()\n      range.moveToElementText(element)\n      range.select()\n    }\n\n    document.execCommand('copy')\n  }, [elementId])\n\n  return onCopyToClipboard\n}\n","import { useState, useCallback } from 'react'\n\nexport default (onSetText, callback, setIsTyping, delay = 600) => {\n  const [timer, setTimer] = useState(0)\n\n  const onSetTextAndTimer = useCallback(\n    (text) => {\n      clearTimeout(timer)\n\n      if (onSetText) onSetText(text)\n      if (setIsTyping) setIsTyping(true)\n\n      setTimer(\n        setTimeout(() => {\n          if (callback) callback(text)\n          if (setIsTyping) setIsTyping(false)\n        }, delay),\n      )\n    },\n    [callback, delay, onSetText, setIsTyping, timer],\n  )\n\n  return onSetTextAndTimer\n}\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { GlobalStyle } from '../../styles/Global'\nimport Home from '../Home'\n\nconst App = () => {\n  const { colors } = useSelector(({ ThemeReducer }) => ThemeReducer)\n\n  return (\n    <ThemeProvider theme={colors}>\n      <GlobalStyle />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { SET_THEME } from '../ActionTypes'\nimport { DARK_THEME_COLORS, THEME_NAMES } from '../../styles/Colors'\nimport { THEME_KEY } from '../../config/localStorageKeys'\n\nconst theme = localStorage.getItem(THEME_KEY)\n\nconst initialState = theme\n  ? JSON.parse(theme)\n  : {\n      name: THEME_NAMES.DARK,\n      colors: DARK_THEME_COLORS,\n    }\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case SET_THEME:\n      return { ...state, ...payload }\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers } from 'redux'\nimport ThemeReducer from './reducers/ThemeReducer'\n\nconst reducers = combineReducers({ ThemeReducer })\n\nexport default createStore(reducers)\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport {\n  faPalette,\n  faExchangeAlt,\n  faTextWidth,\n  faTimes,\n  faFileUpload,\n  faCopy,\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n  faGithub,\n  faPalette,\n  faExchangeAlt,\n  faTextWidth,\n  faTimes,\n  faFileUpload,\n  faCopy,\n)\n","import Glossary from './Glossary.json'\nimport Home from './Home.json'\nimport Common from './Common.json'\nimport Error from './Error.json'\n\nexport default {\n  Common,\n  Glossary,\n  Home,\n  Error,\n}\n","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport PT_BR from './PT_BR'\n\ni18next.use(initReactI18next).init({\n  resources: { 'pt-BR': PT_BR },\n  fallbackLng: 'pt-BR',\n  lng: 'pt-BR',\n  defaultNS: 'Common',\n  debug: false,\n})\n\nexport default i18next\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './pages/App'\nimport store from './store'\nimport './config/IconLibrary'\nimport './locales'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}